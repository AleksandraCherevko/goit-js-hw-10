{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('button[data-start]');\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\nconst timer = document.querySelector('.timer');\n\nlet userSelectedDate = Date.now();\nstartBtn.disabled = false;\nlet currentTime = Date.now();\n\n// iziToast.show({\n//   message: 'Please choose a date in the future',\n// });\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n\n    if (selectedDates[0] < userSelectedDate) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        messageColor: '#FFFFF0',\n        backgroundColor: '#FF4500',\n        position: 'topRight',\n        progressBar: false,\n        close: false,\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr('input[type=\"text\"]', options);\n\n// function updateTimer({ days, hours, mins, second })\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nstartBtn.addEventListener('click', () => {\n  const delatTime = userSelectedDate - currentTime;\n  console.log(delatTime);\n  const timeCount = this.convertMs(delatTime);\n});\n"],"names":["startBtn","userSelectedDate","currentTime","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","delatTime","this"],"mappings":"wvBAKA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EAC/C,SAAS,cAAc,aAAa,EACnC,SAAS,cAAc,cAAc,EACnC,SAAS,cAAc,gBAAgB,EACvC,SAAS,cAAc,gBAAgB,EACzC,SAAS,cAAc,QAAQ,EAE7C,IAAIC,EAAmB,KAAK,MAC5BD,EAAS,SAAW,GACpB,IAAIE,EAAc,KAAK,MAMvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAExBA,EAAc,CAAC,EAAIH,GACrBI,EAAS,KAAK,CACZ,QAAS,qCACT,aAAc,UACd,gBAAiB,UACjB,SAAU,WACV,YAAa,GACb,MAAO,EACf,CAAO,EACDL,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAM,EAAU,qBAAsBH,CAAO,EAIvC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAE/BP,EAAS,iBAAiB,QAAS,IAAM,CACvC,MAAMa,EAAYZ,EAAmBC,EACrC,QAAQ,IAAIW,CAAS,EACHC,WAAK,UAAUD,CAAS,CAC5C,CAAC"}